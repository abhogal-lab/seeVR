function [MRTimes, LocalTimeUTC, DesiredPO2mmHg, DesiredPCO2mmHg, AchievablePO2mmHg, AchievablePCO2mmHg, PO2mmHg, PCO2mmHg, RestingPO2mmHg, RestingPCO2mmHg, PBarommHg, InspireTimeseconds, ExpireTimeseconds, BreathIdx, TidalVolumemL, RespirationRateBPM, StartInspiresec, O2AdjustmentmmHg, CO2AdjustmentmmHg, G1TargetVolmL, G1FCO2, G1FO2, G2FCO2, G2FO2] = import_EndTidal_V2(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [MRTIMES, LOCALTIMEUTC, DESIREDPO2MMHG, DESIREDPCO2MMHG,
%  ACHIEVABLEPO2MMHG, ACHIEVABLEPCO2MMHG, PO2MMHG, PCO2MMHG,
%  RESTINGPO2MMHG, RESTINGPCO2MMHG, PBAROMMHG, INSPIRETIMESECONDS,
%  EXPIRETIMESECONDS, BREATHIDX, TIDALVOLUMEML, RESPIRATIONRATEBPM,
%  STARTINSPIRESEC, O2ADJUSTMENTMMHG, CO2ADJUSTMENTMMHG, G1TARGETVOLML,
%  G1FCO2, G1FO2, G2FCO2, G2FO2] = IMPORTFILE(FILENAME) reads data from
%  text file FILENAME for the default selection.  Returns the data as
%  column vectors.
%
%  [MRTIMES, LOCALTIMEUTC, DESIREDPO2MMHG, DESIREDPCO2MMHG,
%  ACHIEVABLEPO2MMHG, ACHIEVABLEPCO2MMHG, PO2MMHG, PCO2MMHG,
%  RESTINGPO2MMHG, RESTINGPCO2MMHG, PBAROMMHG, INSPIRETIMESECONDS,
%  EXPIRETIMESECONDS, BREATHIDX, TIDALVOLUMEML, RESPIRATIONRATEBPM,
%  STARTINSPIRESEC, O2ADJUSTMENTMMHG, CO2ADJUSTMENTMMHG, G1TARGETVOLML,
%  G1FCO2, G1FO2, G2FCO2, G2FO2] = IMPORTFILE(FILE, DATALINES) reads
%  data for the specified row interval(s) of text file FILENAME. Specify
%  DATALINES as a positive scalar integer or a N-by-2 array of positive
%  scalar integers for dis-contiguous row intervals.
%
%  Example:
%  [MRTimes, LocalTimeUTC, DesiredPO2mmHg, DesiredPCO2mmHg, AchievablePO2mmHg, AchievablePCO2mmHg, PO2mmHg, PCO2mmHg, RestingPO2mmHg, RestingPCO2mmHg, PBarommHg, InspireTimeseconds, ExpireTimeseconds, BreathIdx, TidalVolumemL, RespirationRateBPM, StartInspiresec, O2AdjustmentmmHg, CO2AdjustmentmmHg, G1TargetVolmL, G1FCO2, G1FO2, G2FCO2, G2FO2] = importfile("G:\SMART_MICRO\SMP000\traces\EndTidal.txt", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 15-May-2025 13:22:14

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 25);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["MRTimes", "LocalTimeUTC", "DesiredPO2mmHg", "DesiredPCO2mmHg", "AchievablePO2mmHg", "AchievablePCO2mmHg", "PO2mmHg", "PCO2mmHg", "RestingPO2mmHg", "RestingPCO2mmHg", "PBarommHg", "InspireTimeseconds", "ExpireTimeseconds", "BreathIdx", "TidalVolumemL", "RespirationRateBPM", "StartInspiresec", "O2AdjustmentmmHg", "CO2AdjustmentmmHg", "G1TargetVolmL", "G1FCO2", "G1FO2", "G2FCO2", "G2FO2", "Var25"];
opts.SelectedVariableNames = ["MRTimes", "LocalTimeUTC", "DesiredPO2mmHg", "DesiredPCO2mmHg", "AchievablePO2mmHg", "AchievablePCO2mmHg", "PO2mmHg", "PCO2mmHg", "RestingPO2mmHg", "RestingPCO2mmHg", "PBarommHg", "InspireTimeseconds", "ExpireTimeseconds", "BreathIdx", "TidalVolumemL", "RespirationRateBPM", "StartInspiresec", "O2AdjustmentmmHg", "CO2AdjustmentmmHg", "G1TargetVolmL", "G1FCO2", "G1FO2", "G2FCO2", "G2FO2"];
opts.VariableTypes = ["double", "datetime", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, "Var25", "WhitespaceRule", "preserve");
opts = setvaropts(opts, "Var25", "EmptyFieldRule", "auto");
opts = setvaropts(opts, "LocalTimeUTC", "InputFormat", "HH:mm:ss");

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
MRTimes = tbl.MRTimes;
LocalTimeUTC = tbl.LocalTimeUTC;
DesiredPO2mmHg = tbl.DesiredPO2mmHg;
DesiredPCO2mmHg = tbl.DesiredPCO2mmHg;
AchievablePO2mmHg = tbl.AchievablePO2mmHg;
AchievablePCO2mmHg = tbl.AchievablePCO2mmHg;
PO2mmHg = tbl.PO2mmHg;
PCO2mmHg = tbl.PCO2mmHg;
RestingPO2mmHg = tbl.RestingPO2mmHg;
RestingPCO2mmHg = tbl.RestingPCO2mmHg;
PBarommHg = tbl.PBarommHg;
InspireTimeseconds = tbl.InspireTimeseconds;
ExpireTimeseconds = tbl.ExpireTimeseconds;
BreathIdx = tbl.BreathIdx;
TidalVolumemL = tbl.TidalVolumemL;
RespirationRateBPM = tbl.RespirationRateBPM;
StartInspiresec = tbl.StartInspiresec;
O2AdjustmentmmHg = tbl.O2AdjustmentmmHg;
CO2AdjustmentmmHg = tbl.CO2AdjustmentmmHg;
G1TargetVolmL = tbl.G1TargetVolmL;
G1FCO2 = tbl.G1FCO2;
G1FO2 = tbl.G1FO2;
G2FCO2 = tbl.G2FCO2;
G2FO2 = tbl.G2FO2;
end